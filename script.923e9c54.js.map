{"version":3,"sources":["src/javascript/data.json","src/javascript/script.js"],"names":["module","exports","myData","data","LoadTimeframes","dailyTime","currentTimeEl","previousTimeEl","x","forEach","element","textContent","timeframes","daily","current","previous","weekly","monthly","dailyTimeframes","document","querySelectorAll","loadDaily","querySelector","addEventListener","event","target","classList","contains","loadWeekly","loadMonthly","stopPropagation"],"mappings":"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","file":"script.923e9c54.js","sourceRoot":"..","sourcesContent":["module.exports = [\n  {\n    \"title\": \"Work\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 5,\n        \"previous\": 7\n      },\n      \"weekly\": {\n        \"current\": 32,\n        \"previous\": 36\n      },\n      \"monthly\": {\n        \"current\": 103,\n        \"previous\": 128\n      }\n    }\n  },\n  {\n    \"title\": \"Play\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 2\n      },\n      \"weekly\": {\n        \"current\": 10,\n        \"previous\": 8\n      },\n      \"monthly\": {\n        \"current\": 23,\n        \"previous\": 29\n      }\n    }\n  },\n  {\n    \"title\": \"Study\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 0,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 4,\n        \"previous\": 7\n      },\n      \"monthly\": {\n        \"current\": 13,\n        \"previous\": 19\n      }\n    }\n  },\n  {\n    \"title\": \"Exercise\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 4,\n        \"previous\": 5\n      },\n      \"monthly\": {\n        \"current\": 11,\n        \"previous\": 18\n      }\n    }\n  },\n  {\n    \"title\": \"Social\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 3\n      },\n      \"weekly\": {\n        \"current\": 5,\n        \"previous\": 10\n      },\n      \"monthly\": {\n        \"current\": 21,\n        \"previous\": 23\n      }\n    }\n  },\n  {\n    \"title\": \"Self Care\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 0,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 2,\n        \"previous\": 2\n      },\n      \"monthly\": {\n        \"current\": 7,\n        \"previous\": 11\n      }\n    }\n  }\n];","import data from \"./data.json\";\n\nconst myData = data; //data received from json file\n//console.log(myData);\n//console.log(myData[0].timeframes.daily.current);\n\nclass LoadTimeframes {\n  constructor(dailyTime, currentTimeEl, previousTimeEl) {\n    this.dailyTime = dailyTime; //data from json\n    this.currentTimeEl = currentTimeEl; //Element in which current time is gonna be displayed\n    this.previousTimeEl = previousTimeEl; //Element in which previous time is gonna be displayed\n  }\n  //So what happens here is we assign 0 to x that we later use as index in dailyTime array\n  //Then we take elements(currentTimeEl, previousTimeEl) which we use to display time user had spent on something\n  //We increment x to increase index value\n  //After first forEach is done, we're assigning 0 to x to reset current index so we can do another forEach for 'previous time' (previous time spent on some kind of activity)\n  \n  loadDaily() {\n    let x = 0;\n    this.currentTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.daily.current}hrs`;\n      x++;\n    });\n    x = 0;\n    this.previousTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.daily.previous}hrs`;\n      x++;\n    });\n  }\n  \n  loadWeekly() {\n    let x = 0;\n    this.currentTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.weekly.current}hrs`;\n      x++;\n    });\n    x = 0;\n    this.previousTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.weekly.previous}hrs`;\n      x++;\n    });\n  }\n  \n  loadMonthly() {\n    let x = 0;\n    this.currentTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.monthly.current}hrs`;\n      x++;\n    });\n    x = 0;\n    this.previousTimeEl.forEach((element) => {\n      element.textContent = `${this.dailyTime[x].timeframes.monthly.previous}hrs`;\n      x++;\n    });\n  }\n}\n\n//loading dailyTimeframes - myData is json current time, .spent-time returns nodeList of elements that are later turned into array with forEach method inside class\n//'previous-spent-time' are elements that display time we spent in previous week\nconst dailyTimeframes = new LoadTimeframes(\n  myData,\n  document.querySelectorAll(\".spent-time\"),\n  document.querySelectorAll(\".previous-spent-time\")\n);\n\ndailyTimeframes.loadDaily(); //By default daily time is loaded\n\n//Event delegation\ndocument.querySelector(\".card-time\").addEventListener(\"click\", (event) => {\n  if (event.target.classList.contains(\"daily\")) {\n    dailyTimeframes.loadDaily();\n  } else if (event.target.classList.contains(\"weekly\")) {\n    dailyTimeframes.loadWeekly();\n  } else if (event.target.classList.contains(\"monthly\")) {\n    dailyTimeframes.loadMonthly();\n  }\n  event.stopPropagation();\n});\n"]}